
name: 'OIDC-Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read
  id-token: write

jobs:
  terraform_plan:
    name: 'Review'
    runs-on: ubuntu-latest
    environment: Review

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3


    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: arn:aws:iam::806066816337:role/OIDC-Workflow-S3-DynamboDB-Deployment
        role-session-name: S3BucketStaticWebsite
        aws-region: eu-central-1

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false

  terraform_apply:
    name: 'Live Production'
    runs-on: ubuntu-latest
    environment: Live Production
    needs: terraform_plan
    

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # - name: Configure Aws Credentials
    #   uses: aws-actions/configure-aws-credentials@v3
      # with:
      #   role-to-assume: arn:aws:iam::806066816337:oidc-provider/token.actions.githubusercontent.com
      #   role-session-name: S3StaticWebsite
      #   aws-region: eu-central-1

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform init

      # On push to "main", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false
